{{- if .Values.workloadStateful }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
{{- else }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "cryptpad-helm.fullname" . }}
  labels:
    {{- include "cryptpad-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.workloadStateful }}
  serviceName: {{ include "cryptpad-helm.fullname" . }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cryptpad-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cryptpad-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cryptpad-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-{{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['/bin/sh', '-c']
          volumeMounts:
            - name: cryptpad-data
              mountPath: /cryptpad/data
              {{- if and .Values.persistence .Values.persistence.cryptpad.data.existingClaim }}
                persistentVolumeClaim:
                  claimName: {{ tpl .Values.persistence.cryptpad.data.existingClaim $ }}
              {{- end }}
          args:
            - |
              FILE=/cryptpad/data/decrees/decree.ndjson
              mkdir -p /cryptpad/data/decrees
              VALUE='["ENABLE_EMBEDDING", [{{ .Values.enableEmbedding }}], "", 0]'
              if  [ -f $FILE ] && [ $(grep -c "ENABLE_EMBEDDING" $FILE) -gt 0 ]
              then
                sed -i "s|.*ENABLE_EMBEDDING.*|$VALUE|g" "$FILE"
              else
                echo "$VALUE" >> "$FILE"
              fi
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CPAD_MAIN_DOMAIN
              value: "{{ include "cryptpad-helm.mainDomain" . | trim }}"
            - name: CPAD_SANDBOX_DOMAIN
              value: "{{ include "cryptpad-helm.sandboxDomain" . | trim }}"
            - name: CPAD_CONF
              value: "{{ .Values.cpadConfig }}"
          ports:
            - name: {{ .Values.service.internalPort }}
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
            - name: {{ .Values.service.websocket.internalPort }}
              containerPort: {{ .Values.service.websocket.containerPort }}
              protocol: TCP
        {{- if .Values.probes.startup.enabled }}
          startupProbe:
          {{- if .Values.probes.startup.httpGet.enabled }}
            httpGet:
              path: {{ .Values.probes.startup.httpGet.path }}
              port: {{ .Values.service.containerPort }}
          {{- else }}
            tcpSocket:
              port: {{ .Values.service.containerPort }}
          {{- end }}
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            successThreshold: {{ .Values.probes.startup.successThreshold }}
        {{- end }}
        {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
          {{- if .Values.probes.liveness.httpGet.enabled }}
            httpGet:
              path: {{ .Values.probes.liveness.httpGet.path }}
              port: {{ .Values.service.containerPort }}
          {{- else }}
            tcpSocket:
              port: {{ .Values.service.containerPort }}
          {{- end }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
        {{- end }}
        {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
          {{- if .Values.probes.readiness.httpGet.enabled }}
            httpGet:
              path: {{ .Values.probes.liveness.httpGet.path }}
              port: {{ .Values.service.containerPort }}
          {{- else }}
            tcpSocket:
              port: {{ .Values.service.containerPort }}
          {{- end }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
        {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
          {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
            - name: cryptpad-{{ $dir }}
              mountPath: /cryptpad/{{ $dir }}
              {{- if $dirvalues.existingClaim }}
                persistentVolumeClaim:
                  claimName: {{ tpl $dirvalues.existingClaim $ }}
              {{- end }}
          {{- end }}
          {{- else if not .Values.workloadStateful }}
          {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
            - name: cryptpad-{{ $dir }}
              mountPath: /cryptpad/{{ $dir }}
          {{- end }}
          {{- end }}
            - name: configmaps
              mountPath: {{ .Values.cpadConfig }}
              subPath: config.js
            - name: configmaps
              mountPath: /cryptpad/customize/application_config.js
              subPath: application_config.js
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: configmaps
          configMap:
            name: {{ include "cryptpad-helm.fullname" . }}
        {{- if and .Values.persistence.enabled .Values.workloadStateful }}
        {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
        {{- if $dirvalues.existingClaim }}
        - name: cryptpad-{{ $dir }}
          persistentVolumeClaim:
            claimName: cryptpad-{{ $dir }}
        {{- end }}
        {{- end }}
    volumeClaimTemplates:
      {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
      {{- if not $dirvalues.existingClaim }}
      - metadata:
          name: cryptpad-{{ $dir }}
          {{- with $dirvalues.annotations }}
          annotations:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with $dirvalues.labels }}
          labels:
            {{- toYaml . | nindent 10 }}
          {{- end }}
        spec:
          accessModes:
          {{- range $dirvalues.accessModes }}
            - {{ . | quote }}
          {{- end }}
          {{- if $dirvalues.storageClass }}
          storageClassName:  {{ $dirvalues.storageClass | quote }}
          {{- end }}
          {{- with $dirvalues.dataSource }}
          dataSource:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          resources:
            requests:
              storage: {{ $dirvalues.size | quote }}
          {{- with $dirvalues.selector }}
          selector:
            {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- end }}
      {{- end }}
  {{- else if .Values.persistence.enabled }}
    {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
        - name: cryptpad-{{ $dir }}
          persistentVolumeClaim:
            claimName: cryptpad-{{ $dir }}
    {{- end }}
  {{- else }}
    {{- range $dir, $dirvalues := .Values.persistence.cryptpad }}
        - name: cryptpad-{{ $dir }}
          emptyDir: {}
  {{- end }}
{{- end }}
